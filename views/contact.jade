extends layout

block content
  include mixins/contacts
  include mixins/forms
  include mixins/tasks

  block contact_type
     contactType = ''

  .row-fluid
    // Contact details
    .span4
      .module

        block contact_id

        table.table.table-condensed.table-borderless
          col(width='1%')
          tbody
            for phone in contact.phoneNumbers
              +profilePhoneNumber(phone)
            for email in contact.emailAddresses
              +profileEmailAddress(email)
            for address in contact.addresses
              +profileAddress(address)
        p
          a(href='/contact/#{contact.id}/edit') <i class="icon-pencil"></i> Edit this #{contactType}

      .module
        h2.module-legend About
        p#backgroundInfo!= $linebreaksbr(contact.backgroundInfo)
        p
          a(href='#editBackgroundInfo', role='button', data-toggle='modal') <i class="icon-pencil"></i> Edit background information

      block additional_info

      .module
        h2.module-legend Tasks
        p
          a(href='/tasks/add?context-contact=#{contact.id}') <i class="icon-plus"></i> Add Task
        table.table.table-condensed.table-borderless
          col(width='1%')
          tbody
            for task in tasks
              +contactTaskRow(task)

    // History
    .span8
      .module
        h2.module-legend History
        p: a(href='#') <i class="icon-plus"></i> Add a Note
        for update in updates
          if (update.isTask())
            .history-item
              .icon: i.icon-check
              p: em Completed by #{update.completedBy} #{update.completedAt.ago()}
              if (update.relatedTo && update.relatedTo.id != contact.id)
                p: a(href='/contact/' + update.relatedTo.id)= update.relatedTo.name
              p
                if (update.category)
                  span.label.label-inverse= update.category
                  | 
                = update.description
          if (update.isNote())
            .history-item
              .icon: i.icon-comment
              p: em Note by #{update.createdBy} #{update.createdAt.ago()}
              if (update.relatedTo && update.relatedTo.id != contact.id)
                p: a(href='/contact/' + update.relatedTo.id)= update.relatedTo.name
              p= update.note

  #editBackgroundInfo.modal.hide.fade
    form(name='backgroundInfoForm', action='/contact/#{contact.id}/backgroundinfo', method='POST')
      +csrf
      .modal-header
        button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
        h3 Background information
      .modal-body
        .row-fluid
          textarea.span12(name='backgroundInfo', rows=10)= contact.backgroundInfo
      .modal-footer
        button.btn(data-dismiss='modal', aria-hidden='true') Close
        button#saveBackgroundInfo.btn.btn-primary(type='submit') Save changes

append scripts
  script
    // Background info modal
    void function() {
      var backgroundInfoCache = ''
      var $modal = $('#editBackgroundInfo')
        , form = document.forms.backgroundInfoForm
        , backgroundInfo = form.elements.backgroundInfo
      // Restore the original info if the modal is closed without being saved
      $modal.on('show', function() { backgroundInfoCache = backgroundInfo.value })
      $modal.on('hide', function() { backgroundInfo.value = backgroundInfoCache })
      // Hijack form submission to submit via XHR instead
      $('#saveBackgroundInfo').click(function(event) {
        event.preventDefault()
        backgroundInfoCache = backgroundInfo.value
        $.ajax(form.action, {
          type: 'POST'
        , data: $(form).serialize()
        , success: function(data) {
            $('#backgroundInfo').html(data)
            $modal.modal('hide')
          }
        , error: function(xhr, status, error) {
            // TODO Niceify
            alert(error + ' ' + status)
          }
        })
      })
    }()